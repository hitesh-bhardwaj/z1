import React, {useRef, useState, useEffect } from "react";
import Head from "next/head";
import Link from "next/link";
import { Cursor } from "../../cursor/index";
import "react-creative-cursor/dist/styles.css";
import gsap from "gsap";
import Image from "next/image";
import { NextSeo } from "next-seo";
import SmoothScroll from "@/components/utils/SmoothScroll";

import Header from "@/components/Header/Header";
import Footer from "@/components/Footer";
import FooterMobile from "@/components/Mobile/FooterMobile";
import Blogs from "@/components/blogData";

gsap.config({
  nullTargetWarn: false,
});

// Hover on the link
const handleHover = (e) => {
  gsap.to(e.target, {
    duration: 0.5,
    scale: 1.1,
    ease: "power1.inOut",
  });
};

// Hover off the link
const handleHoverExit = (e) => {
  gsap.to(e.target, {
    duration: 0.5,
    scale: 1,
    ease: "power1.inOut",
  });
};

const buttons = [
  { label: "All" },
  { label: "Strategy" },
  { label: "Design" },
  { label: "Technology" },
  { label: "Marketing" },
];

export default function blogs() {

  const [activeIndex, setActiveIndex] = useState(0);
  const [visiblePosts, setVisiblePosts] = useState(9);
  const viewMoreButtonRef = useRef(null);
  const [animate, setAnimate] = useState(false);

  const handleButtonClick = (index) => {
    setActiveIndex(index);
    setVisiblePosts(6);
    setAnimate(true); // Trigger animation when changing category
  };

  const handleViewMore = () => {
    setVisiblePosts(visiblePosts + 6);
    setAnimate(false);
  };

  const filteredBlogPosts =
    activeIndex === 0
      ? Blogs.slice(0, visiblePosts)
      : Blogs.filter((post) => post.category === buttons[activeIndex].label).slice(0, visiblePosts);

  const showViewMore = visiblePosts < Blogs.length;

  // Hero Section Animation
  useEffect(() => {
    const tl = gsap.timeline();
    tl.fromTo(
      ".blogs-heading #blog",
      {
        rotationX: -80,
        opacity: 0,
        translateY: 300,
        transformPerspective: "1000",
        transformOrigin: "top center",
      },
      {
        delay: 3.5,
        duration: 1.3,
        rotationX: 0,
        opacity: 1,
        translateY: 0,
        stagger: 0.2,
      }
    );
    return () => tl.kill();
  }, []);

  // Hero Section Animation
  useEffect(() => {
    const tl = gsap.timeline();
    tl.fromTo(
      "#anim",
      {
        opacity: 0,
        translateY: 60,
      },
      {
        delay: 4.2,
        duration: 1.3,
        opacity: 1,
        stagger: 0.05,
        translateY: 0,
      }
    );
    return () => tl.kill();
  }, []);

  // Page Transitions
  useEffect(() => {
    const loaderBars = document.querySelectorAll("#loaderbars");
    const tl = gsap.timeline();

    let ctx = gsap.context(() => {

      tl.from(".loader-wrap-heading h1", {
        delay: 0.5,
        y: 200,
        skewY: 10,
        duration: 1,
      }).to(".loader-wrap-heading h1", {
        delay: 0.5,
        y: -200,
        skewY: 10,
        duration: 1,
      }).to(loaderBars, {
        height: 0,
        duration: 0.6,
        delay: -0.5,
        ease: "power2.easeIn",
        stagger: 0.1,
      }).to("#loader", {
        y: "-1500",
        opacity: 0,
        ease: "power2.inOut",
      });
    });
    return () => ctx.revert();
  }, []);

  // Image Box Animation
  useEffect(() => {
    const tl = gsap.timeline();
    tl.fromTo(
      "#img",
      {
        opacity: 0,
        translateY: 150,
      },
      {
        delay: 3.8,
        duration: 1.3,
        opacity: 1,
        stagger: 0.1,
        translateY: 0,
      }
    );
    return () => tl.kill();
  }, []);

  // Image Animation when category selected 
  useEffect(() => {
    if (animate) {
      gsap.fromTo(
        ".blog-page-grid",
        {
          opacity: 0,
          y: 150,
        },
        {
          opacity: 1,
          y: 0,
          duration: 1,
          stagger: 0.2,
          onComplete: () => setAnimate(false),
        }
      );
    }
  }, [animate, activeIndex]);

  console.clear();
  
  return (
    <>
            <NextSeo
              title="Top Digital Marketing to Follow | Enigma"
              description="Generated by create next app"
              canonical="https://www.weareenigma.com/blogs"
              openGraph={{
                url: "https://www.weareenigma.com/blogs",
                title: "Top Digital Marketing to Follow | Enigma",
                description:
                  "Generated by create next app",
                images: [
                  {
                    url: "",
                    width: 400,
                    height: 600,
                    alt: "Enigma Image",
                    type: "image/png",
                  },
                  { url: "" },
                ],
                siteName: "https://www.weareenigma.com/blogs",
              }}
            />


      <Head>
        <title>Top Digital Marketing to Follow | Enigma</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1.0, maximum-scale=5.0"
        ></meta>
        <link rel="icon" href="/fav-icon.png" />
      </Head>

<SmoothScroll />

{/*========Loader========*/}
      <div className="loader-wrap" id="loader">
      <div className='mainLoaderBg'>
            <span className='mainLoaderBar' id='loaderbars'></span>
            <span className='mainLoaderBar' id='loaderbars'></span>
            <span className='mainLoaderBar' id='loaderbars'></span>
            <span className='mainLoaderBar' id='loaderbars'></span>
            <span className='mainLoaderBar' id='loaderbars'></span>
          </div>

        <div className="loader-wrap-heading">
          <span>
            <h1>Our Thoughts & Resources</h1>
          </span>
        </div>
      </div>

      <Cursor isGelly={true} />

      <div>
        <Header />
      </div>

      <main>
        <div className="blogs-main-section">
          <div className="blogs-sub-section">
            <div
              className="blogs-heading"
              data-cursor-size="10px"
              data-cursor-text=""
            >
              <h1 id="blog">
                <span>All Articles</span>
              </h1>
            </div>

            <div className="blogs-section">
              {buttons &&
                buttons.map((type, index) => (
                  <>
                    <button
                      className={
                        activeIndex === index ? "active" : "button--calypso"
                      }
                      key={index}
                      onClick={() => handleButtonClick(index)}
                      id="anim"
                    >
                      <span>{type.label}</span>
                    </button>
                  </>
                ))}

              <div className="ul-items">
                {filteredBlogPosts.map((type, index, post) => (
                  <div key={index} className="blog-page-grid">
                    <div key={type.id} className="ul-blog" id="img">
                      <Link href={`${type.Link}`}>
                        <div className="image-box-blog">
                          <Image
                            src={type.image}
                            className="img-blog"
                            onMouseEnter={(e) => handleHover(e)}
                            onMouseOut={(e) => handleHoverExit(e)}
                            data-cursor-text="Read Now"
                            data-cursor-size="120px"
                            data-cursor-color="#000"
                            alt="Blog-img"
                            width={600}
                            height={800}
                            priority={false}
                          />
                        </div>
                        <h2 className="blog-list-tag">{type.name}</h2>
                      </Link>
                      <h3 className="desc-tag">{type.description}</h3>
                    </div>
                  </div>
                ))}
              </div>

              <div className="blog-showmore-box">
                {showViewMore && (
                  <button
                    aria-label="View More Blogs"
                    ref={viewMoreButtonRef}
                    className="view-more button--calypso"
                    onClick={handleViewMore}
                  >
                    <span>View More</span>
                  </button>
                )}
              </div>
            </div>
          </div>
        </div>
      </main>

      {/* ======================== Footer ====================== */}
      <div className="desktop-footer">
        <Footer />
      </div>

      <div className="mobile-footer">
        <FooterMobile />
      </div>
      {/* ======================== Footer END ====================== */}
    </>
  );
}
